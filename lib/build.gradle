plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

version = libs.versions.lib.version.get()
group = libs.versions.lib.group.get()

gradle.projectsEvaluated {
    tasks.withType(JavaCompile).tap {
        configureEach {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

android {
    namespace "jp.programminglife.libpljp.android"
    compileSdk libs.versions.app.compileSdk.get().toInteger()

    defaultConfig {
        minSdk libs.versions.app.minSdk.get().toInteger()
        targetSdk libs.versions.app.targetSdk.get().toInteger()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlin {
        jvmToolchain {
            languageVersion.set(JavaLanguageVersion.of(8))
            vendor = JvmVendorSpec.ORACLE
        }
    }
    kotlinOptions {
        freeCompilerArgs = ["-opt-in=kotlin.RequiresOptIn"]
    }
}

dependencies {
    api libs.androidx.annotation
    implementation libs.androidx.preference.ktx
    implementation libs.androidx.appcompat
    api libs.androidx.livedata.ktx
    testImplementation libs.junit
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.ext.junit
    androidTestImplementation libs.androidx.espresso.core
}

tasks.register('sourcesJar', Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
}

afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                artifactId = 'libpljp-android'
                from components.release
                artifact(sourcesJar)
            }
        }
    }
}
